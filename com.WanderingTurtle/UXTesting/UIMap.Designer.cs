// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UXTesting
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WpfButton uIRegisterGuestButton = this.UIWanderingTurtleResorWindow.UIItemCustom.UIMainTabControlTabList.UIHotelGuestsTabPage.UIRegisterGuestButton;
            WpfEdit uITxtFirstNameEdit = this.UIAddNewHotelGuestWindow.UITxtFirstNameEdit;
            WpfEdit uITxtLastNameEdit = this.UIAddNewHotelGuestWindow.UITxtLastNameEdit;
            WpfEdit uITxtAddress1Edit = this.UIAddNewHotelGuestWindow.UITxtAddress1Edit;
            WpfEdit uITxtAddress2Edit = this.UIAddNewHotelGuestWindow.UITxtAddress2Edit;
            WpfComboBox uICboZipComboBox = this.UIAddNewHotelGuestWindow.UICboZipComboBox;
            WpfEdit uIMaskedTextBoxEdit = this.UIAddNewHotelGuestWindow.UIMaskedTextBoxEdit;
            WpfEdit uITxtEmailAddressEdit = this.UIAddNewHotelGuestWindow.UITxtEmailAddressEdit;
            WpfEdit uITxtRoomNumberEdit = this.UIAddNewHotelGuestWindow.UITxtRoomNumberEdit;
            WpfEdit uITxtGuestPINEdit = this.UIAddNewHotelGuestWindow.UITxtGuestPINEdit;
            WpfButton uISubmitButton = this.UIAddNewHotelGuestWindow.UISubmitButton;
            WpfButton uIOKButton = this.UIAddNewHotelGuestWindow.UIOKButton;
            WpfButton uIOKButton1 = this.UIAddNewHotelGuestWindow.UIOKButton1;
            WpfButton uIOKButton2 = this.UIAddNewHotelGuestWindow.UIOKButton2;
            WpfButton uIOKButton3 = this.UIAddNewHotelGuestWindow.UIOKButton3;
            WpfButton uIOKButton4 = this.UIAddNewHotelGuestWindow.UIOKButton4;
            WpfButton uIOKButton5 = this.UIAddNewHotelGuestWindow.UIOKButton5;
            #endregion

            // Click 'Register Guest' button
            Mouse.Click(uIRegisterGuestButton, new Point(63, 27));

            // Type 'TJ' in 'TxtFirstName' text box
            uITxtFirstNameEdit.Text = this.RecordedMethod1Params.UITxtFirstNameEditText;

            // Type '{Tab}' in 'TxtFirstName' text box
            Keyboard.SendKeys(uITxtFirstNameEdit, this.RecordedMethod1Params.UITxtFirstNameEditSendKeys, ModifierKeys.None);

            // Type 'Miller' in 'TxtLastName' text box
            uITxtLastNameEdit.Text = this.RecordedMethod1Params.UITxtLastNameEditText;

            // Type '{Tab}' in 'TxtLastName' text box
            Keyboard.SendKeys(uITxtLastNameEdit, this.RecordedMethod1Params.UITxtLastNameEditSendKeys, ModifierKeys.None);

            // Type '100 Miller Ave' in 'TxtAddress1' text box
            uITxtAddress1Edit.Text = this.RecordedMethod1Params.UITxtAddress1EditText;

            // Type '{Tab}' in 'TxtAddress1' text box
            Keyboard.SendKeys(uITxtAddress1Edit, this.RecordedMethod1Params.UITxtAddress1EditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'TxtAddress2' text box
            Keyboard.SendKeys(uITxtAddress2Edit, this.RecordedMethod1Params.UITxtAddress2EditSendKeys, ModifierKeys.None);

            // Type '{Down}{Down}{Down}{Tab}' in 'CboZip' combo box
            Keyboard.SendKeys(uICboZipComboBox, this.RecordedMethod1Params.UICboZipComboBoxSendKeys, ModifierKeys.None);

            // Type '(333) 666-6666' in 'MaskedTextBox' text box
            uIMaskedTextBoxEdit.Text = this.RecordedMethod1Params.UIMaskedTextBoxEditText;

            // Type '{Tab}' in 'MaskedTextBox' text box
            Keyboard.SendKeys(uIMaskedTextBoxEdit, this.RecordedMethod1Params.UIMaskedTextBoxEditSendKeys, ModifierKeys.None);

            // Type 'tj@miller.net' in 'TxtEmailAddress' text box
            uITxtEmailAddressEdit.Text = this.RecordedMethod1Params.UITxtEmailAddressEditText;

            // Type '{Tab}' in 'TxtEmailAddress' text box
            Keyboard.SendKeys(uITxtEmailAddressEdit, this.RecordedMethod1Params.UITxtEmailAddressEditSendKeys, ModifierKeys.None);

            // Type '156' in 'TxtRoomNumber' text box
            uITxtRoomNumberEdit.Text = this.RecordedMethod1Params.UITxtRoomNumberEditText;

            // Type '{Tab}' in 'TxtRoomNumber' text box
            Keyboard.SendKeys(uITxtRoomNumberEdit, this.RecordedMethod1Params.UITxtRoomNumberEditSendKeys, ModifierKeys.None);

            // Type '1596' in 'TxtGuestPIN' text box
            uITxtGuestPINEdit.Text = this.RecordedMethod1Params.UITxtGuestPINEditText;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(82, 21));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(55, 24));

            // Type '1599' in 'TxtGuestPIN' text box
            uITxtGuestPINEdit.Text = this.RecordedMethod1Params.UITxtGuestPINEditText1;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(84, 21));

            // Click 'OK' button
            Mouse.Click(uIOKButton1, new Point(48, 12));

            // Click 'TxtGuestPIN' text box
            Mouse.Click(uITxtGuestPINEdit, new Point(66, 23));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Type '1485' in 'TxtGuestPIN' text box
            uITxtGuestPINEdit.Text = this.RecordedMethod1Params.UITxtGuestPINEditText2;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(82, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton2, new Point(82, 18));

            // Click 'TxtGuestPIN' text box
            Mouse.Click(uITxtGuestPINEdit, new Point(82, 13));

            // Last action on Row was not recorded because the control does not have any good identification property.

            // Type '1655' in 'TxtGuestPIN' text box
            uITxtGuestPINEdit.Text = this.RecordedMethod1Params.UITxtGuestPINEditText3;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(68, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton3, new Point(47, 24));

            // Type '9963' in 'TxtGuestPIN' text box
            uITxtGuestPINEdit.Text = this.RecordedMethod1Params.UITxtGuestPINEditText4;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(105, 31));

            // Click 'OK' button
            Mouse.Click(uIOKButton4, new Point(58, 38));

            // Type '158' in 'TxtRoomNumber' text box
            uITxtRoomNumberEdit.Text = this.RecordedMethod1Params.UITxtRoomNumberEditText1;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(87, 19));

            // Click 'OK' button
            Mouse.Click(uIOKButton5, new Point(65, 39));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIWanderingTurtleResorWindow UIWanderingTurtleResorWindow
        {
            get
            {
                if ((this.mUIWanderingTurtleResorWindow == null))
                {
                    this.mUIWanderingTurtleResorWindow = new UIWanderingTurtleResorWindow();
                }
                return this.mUIWanderingTurtleResorWindow;
            }
        }
        
        public UIAddNewHotelGuestWindow UIAddNewHotelGuestWindow
        {
            get
            {
                if ((this.mUIAddNewHotelGuestWindow == null))
                {
                    this.mUIAddNewHotelGuestWindow = new UIAddNewHotelGuestWindow();
                }
                return this.mUIAddNewHotelGuestWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIWanderingTurtleResorWindow mUIWanderingTurtleResorWindow;
        
        private UIAddNewHotelGuestWindow mUIAddNewHotelGuestWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'TJ' in 'TxtFirstName' text box
        /// </summary>
        public string UITxtFirstNameEditText = "TJ";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtFirstName' text box
        /// </summary>
        public string UITxtFirstNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Miller' in 'TxtLastName' text box
        /// </summary>
        public string UITxtLastNameEditText = "Miller";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtLastName' text box
        /// </summary>
        public string UITxtLastNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '100 Miller Ave' in 'TxtAddress1' text box
        /// </summary>
        public string UITxtAddress1EditText = "100 Miller Ave";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtAddress1' text box
        /// </summary>
        public string UITxtAddress1EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtAddress2' text box
        /// </summary>
        public string UITxtAddress2EditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Down}{Down}{Down}{Tab}' in 'CboZip' combo box
        /// </summary>
        public string UICboZipComboBoxSendKeys = "{Down}{Down}{Down}{Tab}";
        
        /// <summary>
        /// Type '(333) 666-6666' in 'MaskedTextBox' text box
        /// </summary>
        public string UIMaskedTextBoxEditText = "(333) 666-6666";
        
        /// <summary>
        /// Type '{Tab}' in 'MaskedTextBox' text box
        /// </summary>
        public string UIMaskedTextBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'tj@miller.net' in 'TxtEmailAddress' text box
        /// </summary>
        public string UITxtEmailAddressEditText = "tj@miller.net";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtEmailAddress' text box
        /// </summary>
        public string UITxtEmailAddressEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '156' in 'TxtRoomNumber' text box
        /// </summary>
        public string UITxtRoomNumberEditText = "156";
        
        /// <summary>
        /// Type '{Tab}' in 'TxtRoomNumber' text box
        /// </summary>
        public string UITxtRoomNumberEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '1596' in 'TxtGuestPIN' text box
        /// </summary>
        public string UITxtGuestPINEditText = "1596";
        
        /// <summary>
        /// Type '1599' in 'TxtGuestPIN' text box
        /// </summary>
        public string UITxtGuestPINEditText1 = "1599";
        
        /// <summary>
        /// Type '1485' in 'TxtGuestPIN' text box
        /// </summary>
        public string UITxtGuestPINEditText2 = "1485";
        
        /// <summary>
        /// Type '1655' in 'TxtGuestPIN' text box
        /// </summary>
        public string UITxtGuestPINEditText3 = "1655";
        
        /// <summary>
        /// Type '9963' in 'TxtGuestPIN' text box
        /// </summary>
        public string UITxtGuestPINEditText4 = "9963";
        
        /// <summary>
        /// Type '158' in 'TxtRoomNumber' text box
        /// </summary>
        public string UITxtRoomNumberEditText1 = "158";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIWanderingTurtleResorWindow : WpfWindow
    {
        
        public UIWanderingTurtleResorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Wandering Turtle Resort";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Wandering Turtle Resort");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.TabContainer";
            this.WindowTitles.Add("Wandering Turtle Resort");
            #endregion
        }
        
        #region Properties
        public UIMainTabControlTabList UIMainTabControlTabList
        {
            get
            {
                if ((this.mUIMainTabControlTabList == null))
                {
                    this.mUIMainTabControlTabList = new UIMainTabControlTabList(this);
                }
                return this.mUIMainTabControlTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIMainTabControlTabList mUIMainTabControlTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMainTabControlTabList : WpfTabList
    {
        
        public UIMainTabControlTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "MainTabControl";
            this.WindowTitles.Add("Wandering Turtle Resort");
            #endregion
        }
        
        #region Properties
        public UIHotelGuestsTabPage UIHotelGuestsTabPage
        {
            get
            {
                if ((this.mUIHotelGuestsTabPage == null))
                {
                    this.mUIHotelGuestsTabPage = new UIHotelGuestsTabPage(this);
                }
                return this.mUIHotelGuestsTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIHotelGuestsTabPage mUIHotelGuestsTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHotelGuestsTabPage : WpfTabPage
    {
        
        public UIHotelGuestsTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Hotel Guests";
            this.WindowTitles.Add("Wandering Turtle Resort");
            #endregion
        }
        
        #region Properties
        public WpfButton UIRegisterGuestButton
        {
            get
            {
                if ((this.mUIRegisterGuestButton == null))
                {
                    this.mUIRegisterGuestButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRegisterGuestButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnRegisterGuest";
                    this.mUIRegisterGuestButton.WindowTitles.Add("Wandering Turtle Resort");
                    #endregion
                }
                return this.mUIRegisterGuestButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIRegisterGuestButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAddNewHotelGuestWindow : WpfWindow
    {
        
        public UIAddNewHotelGuestWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Add New Hotel Guest";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add New Hotel Guest");
            #endregion
        }
        
        #region Properties
        public WpfEdit UITxtFirstNameEdit
        {
            get
            {
                if ((this.mUITxtFirstNameEdit == null))
                {
                    this.mUITxtFirstNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtFirstNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtFirstName";
                    this.mUITxtFirstNameEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtFirstNameEdit;
            }
        }
        
        public WpfEdit UITxtLastNameEdit
        {
            get
            {
                if ((this.mUITxtLastNameEdit == null))
                {
                    this.mUITxtLastNameEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtLastNameEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtLastName";
                    this.mUITxtLastNameEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtLastNameEdit;
            }
        }
        
        public WpfEdit UITxtAddress1Edit
        {
            get
            {
                if ((this.mUITxtAddress1Edit == null))
                {
                    this.mUITxtAddress1Edit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtAddress1Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtAddress1";
                    this.mUITxtAddress1Edit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtAddress1Edit;
            }
        }
        
        public WpfEdit UITxtAddress2Edit
        {
            get
            {
                if ((this.mUITxtAddress2Edit == null))
                {
                    this.mUITxtAddress2Edit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtAddress2Edit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtAddress2";
                    this.mUITxtAddress2Edit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtAddress2Edit;
            }
        }
        
        public WpfComboBox UICboZipComboBox
        {
            get
            {
                if ((this.mUICboZipComboBox == null))
                {
                    this.mUICboZipComboBox = new WpfComboBox(this);
                    #region Search Criteria
                    this.mUICboZipComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "CboZip";
                    this.mUICboZipComboBox.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUICboZipComboBox;
            }
        }
        
        public WpfEdit UIMaskedTextBoxEdit
        {
            get
            {
                if ((this.mUIMaskedTextBoxEdit == null))
                {
                    this.mUIMaskedTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIMaskedTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "MaskedTextBox";
                    this.mUIMaskedTextBoxEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIMaskedTextBoxEdit;
            }
        }
        
        public WpfEdit UITxtEmailAddressEdit
        {
            get
            {
                if ((this.mUITxtEmailAddressEdit == null))
                {
                    this.mUITxtEmailAddressEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtEmailAddressEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtEmailAddress";
                    this.mUITxtEmailAddressEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtEmailAddressEdit;
            }
        }
        
        public WpfEdit UITxtRoomNumberEdit
        {
            get
            {
                if ((this.mUITxtRoomNumberEdit == null))
                {
                    this.mUITxtRoomNumberEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtRoomNumberEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtRoomNumber";
                    this.mUITxtRoomNumberEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtRoomNumberEdit;
            }
        }
        
        public WpfEdit UITxtGuestPINEdit
        {
            get
            {
                if ((this.mUITxtGuestPINEdit == null))
                {
                    this.mUITxtGuestPINEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITxtGuestPINEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "TxtGuestPIN";
                    this.mUITxtGuestPINEdit.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUITxtGuestPINEdit;
            }
        }
        
        public WpfButton UISubmitButton
        {
            get
            {
                if ((this.mUISubmitButton == null))
                {
                    this.mUISubmitButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUISubmitButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "BtnSubmit";
                    this.mUISubmitButton.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUISubmitButton;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        
        public WpfButton UIOKButton1
        {
            get
            {
                if ((this.mUIOKButton1 == null))
                {
                    this.mUIOKButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton1.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton1;
            }
        }
        
        public WpfButton UIOKButton2
        {
            get
            {
                if ((this.mUIOKButton2 == null))
                {
                    this.mUIOKButton2 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton2.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton2.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton2;
            }
        }
        
        public WpfButton UIOKButton3
        {
            get
            {
                if ((this.mUIOKButton3 == null))
                {
                    this.mUIOKButton3 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton3.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton3.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton3;
            }
        }
        
        public WpfButton UIOKButton4
        {
            get
            {
                if ((this.mUIOKButton4 == null))
                {
                    this.mUIOKButton4 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton4.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton4.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton4;
            }
        }
        
        public WpfButton UIOKButton5
        {
            get
            {
                if ((this.mUIOKButton5 == null))
                {
                    this.mUIOKButton5 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton5.SearchProperties[WpfButton.PropertyNames.AutomationId] = "PART_AffirmativeButton";
                    this.mUIOKButton5.WindowTitles.Add("Add New Hotel Guest");
                    #endregion
                }
                return this.mUIOKButton5;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUITxtFirstNameEdit;
        
        private WpfEdit mUITxtLastNameEdit;
        
        private WpfEdit mUITxtAddress1Edit;
        
        private WpfEdit mUITxtAddress2Edit;
        
        private WpfComboBox mUICboZipComboBox;
        
        private WpfEdit mUIMaskedTextBoxEdit;
        
        private WpfEdit mUITxtEmailAddressEdit;
        
        private WpfEdit mUITxtRoomNumberEdit;
        
        private WpfEdit mUITxtGuestPINEdit;
        
        private WpfButton mUISubmitButton;
        
        private WpfButton mUIOKButton;
        
        private WpfButton mUIOKButton1;
        
        private WpfButton mUIOKButton2;
        
        private WpfButton mUIOKButton3;
        
        private WpfButton mUIOKButton4;
        
        private WpfButton mUIOKButton5;
        #endregion
    }
}
